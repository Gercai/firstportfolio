// This is where you can import other stylesheets or write your scss code
@import "../../node_modules/bootstrap/scss/bootstrap";
@import "./mixin.scss";

$break-middle: 670px;
$break-large: 1200px;
$main-color:  #022f58;
$card-color:  #26557e;



main{
    min-width: 600px;
}

.card2{
    width: 20vw; 
    background-color: $card-color;
}

a{
    color: black;
}
 
.aboutMe{
    background-color: $card-color;
    height: 100px;
} 

.grid-container{
    display: flex;
    width: 100vw;
    justify-content: center;
    background-color: $main-color; 
    
}
.grid{
    border: solid black 1px;
    width: 100%;
    padding-bottom: 200px;
    display:grid;
    grid-template-columns: repeat(8, 200px);
    grid-template-rows: repeat(8, 200px);
    background-color: $main-color; 
    align-items: center;
    @for $i from 1 through 10 {
    
        @if ($i % 2) == 1 {

            & > div:nth-child(2n +#{$i}) {
                grid-column: 1 / 2;
                grid-row: #{$i} / 1 span;
            }

        }
        @else {
            & > div:nth-child(2n +#{$i}) {
                grid-column: 2 / 3;
                grid-row: #{$i} / 1 span;
        
            }
        }
    } 
} 
  


  
@media screen and(min-width: $break-middle){


    .grid{
        padding-bottom: 0;
    
        $grid-row-start: 1;
        @for $i from 1 through 10 {
        

            @if ($i % 3) == 1 {
     
                & > div:nth-child(2n +#{$i}) {
                    grid-column: 1 / 1 span;
                    grid-row: #{$grid-row-start} / 1 span;
                }
    
            }
            @else if($i % 3) == 2 {
                & > div:nth-child(2n +#{$i}) {
                    grid-column: 2 / 1 span;
                    grid-row: #{$grid-row-start +1} / 1 span;
                
                }
            }
            @else{

                & > div:nth-child(2n +#{$i}) {
                    grid-column: 3 / 1 span;
                    grid-row: #{$grid-row-start} - 3 / 1 span;
                }
                $grid-row-start: $grid-row-start + 2;
   
            }
        
        
        } 
    
    } 
    }


    @media screen and(min-width: $break-large){


        .grid{
            padding-bottom: 0;
        
            @for $i from 1 through 10 {
            
                @if ($i % 2) == 1 {
        
                    & > div:nth-child(2n +#{$i}) {
                        grid-column: #{$i} / 1 span;
                        grid-row: 1 / 2;
                    }
        
                }
                @else {
                    & > div:nth-child(2n +#{$i}) {
                        grid-column: #{$i} / 1 span;
                        grid-row: 2 / 3;
                    
                    }
                }
            
            
            } 
        
        }              
           
        }

.square45Deg{
    overflow: hidden;
    display:block;
    transform: rotate(45deg);
    color: white;
    height: 200px; 
    width: 200px;
    margin-top: 100px;
    margin-left: 100px;
    border-radius: 10%;
    border: solid black 2px;
    box-shadow: 5px 5px 6px black;

    & > div{
        transform:rotate(-45deg);
        max-height: 200px;
        width: 100%;
        color: black;
        object-fit: cover;
        object-position: left;
    

        & > img{
            border-top-left-radius: -40%;
            border-top-right-radius: -40%;
            border-bottom-left-radius: 2%;
            border-bottom-right-radius: 2%;
            
            width:100%;
            height: 150px;
        }
        & > p{
            // transform: rotate(180deg);
            margin-top: 3px;
            text-align: center;
            border-top: solid $main-color 20px;
            border-right: solid $main-color 20px;
            border-left: solid $main-color 20px;
            border-bottom: solid $main-color 10px;
            border-radius: 100%;
            transform: translateY(-20px);
            & > p { 
            }
        }
       
    }
}
 

